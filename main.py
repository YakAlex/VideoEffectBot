import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommand
from config import BOT_TOKEN
from handlers import video_note, effects, addons, finalize

from aiogram import Router
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from fsm.states import VideoEffectStates

# –£–≤—ñ–º–∫–Ω–µ–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

router = Router()

async def set_default_commands(bot: Bot):
    commands = [
        BotCommand(command="/start", description="–ó–∞–ø—É—Å–∫"),
    ]
    await bot.set_my_commands(commands)

async def main():
    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher(storage=MemoryStorage())

    @dp.message(CommandStart())
    async def cmd_start(message: Message, state: FSMContext):
        await state.clear()
        await message.answer("üëã –ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –≤—ñ–¥–µ–æ–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–∫—Ä—É–∂–µ—á–æ–∫), —â–æ–± –ø–æ—á–∞—Ç–∏ –æ–±—Ä–æ–±–∫—É.")
        await state.set_state(VideoEffectStates.WaitingForVideo)

    # –†–µ—î—Å—Ç—Ä—É—î–º–æ –≤—Å—ñ –º–æ–¥—É–ª—ñ
    dp.include_router(video_note.router)
    dp.include_router(effects.router)
    dp.include_router(addons.router)
    dp.include_router(finalize.router)

    await set_default_commands(bot)
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
